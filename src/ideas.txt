
- similar keys (bit distance?) give similar encryptions.  use this to
  hunt for keys.  genetic?

- is output similar to text?  measure bit distance letter by letter.
  look at whether there is a lag (cross-correlation).

- plaintext that goes 0,1,2,3... will xor count (state constantly zero
  if key also zero).

- eight bit shows state directly.

- since plaintext has patterns, and plaintext critical for randomness, 
  ordinary text will not be random when encrypted.

- does state repeat too quickly?  what about with text?

- early cipher only depends on part of key?  incremental crack?

- if you look at the text vectors, constant values encrypt to the same
  value, except for a prefix.  how general is this?  is the encryption
  some kind of differential?  what does that mean?

- can we construct state / keys from known plaintext (all zeroes)?

- maybe set up a sat solver?! (poc using text; if it works, wrap).

- when plaintext unknown, just run it backwards.  when we can't infer,
  guess.  how does that reduce the search space?  maybe with a reduced
  alphabet?

- measure how long it takes to change key by position.  how variable
  it is.

- quantify how things (don't) scale with keysize.

- what happens if you xor ciphertext with the same plaintext encrypted
  with an empty key?  what happens if you xor ciphertext with empty
  plaintext and the same key?  what happens if you xor ciphertext with
  a counter?

- for large, random keys, and constant plaintext, what structure do we
  see?  are different keys similar in some way?  what happens when the
  plaintext has structrue too?  are there correlations at 256 bytes
  (counter looping)?
